apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: claude-task-master-ingress
  namespace: default
  labels:
    app: claude-task-master
  annotations:
    # NGINX Ingress Controller annotations
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' wss: https:;" always;
    
    # Let's Encrypt certificate issuer
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    
    # External DNS
    external-dns.alpha.kubernetes.io/hostname: "claude-task-master.example.com"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - claude-task-master.example.com
    - api.claude-task-master.example.com
    secretName: claude-task-master-tls
  rules:
  - host: claude-task-master.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: claude-task-master-service
            port:
              number: 80
      - path: /health
        pathType: Prefix
        backend:
          service:
            name: claude-task-master-service
            port:
              number: 80
      - path: /metrics
        pathType: Prefix
        backend:
          service:
            name: claude-task-master-service
            port:
              number: 8000
  - host: api.claude-task-master.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: claude-task-master-service
            port:
              number: 80
---
# Separate ingress for monitoring endpoints (internal access only)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: claude-task-master-monitoring-ingress
  namespace: default
  labels:
    app: claude-task-master
    component: monitoring
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: monitoring-auth
    nginx.ingress.kubernetes.io/auth-realm: "Monitoring Access Required"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - monitoring.claude-task-master.example.com
    secretName: claude-task-master-monitoring-tls
  rules:
  - host: monitoring.claude-task-master.example.com
    http:
      paths:
      - path: /metrics
        pathType: Prefix
        backend:
          service:
            name: claude-task-master-service
            port:
              number: 8000
      - path: /health
        pathType: Prefix
        backend:
          service:
            name: claude-task-master-service
            port:
              number: 80

