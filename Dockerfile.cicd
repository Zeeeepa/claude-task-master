# Comprehensive CI/CD System Dockerfile
FROM node:18-alpine

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apk add --no-cache \
    git \
    curl \
    bash \
    python3 \
    py3-pip \
    build-base \
    postgresql-client \
    docker-cli

# Install Claude Code (mock installation for container)
RUN curl -fsSL https://claude.ai/install.sh | bash || echo "Claude Code installation skipped in container"

# Copy package files
COPY package*.json ./

# Install Node.js dependencies
RUN npm ci --only=production

# Copy application code
COPY . .

# Create necessary directories
RUN mkdir -p /app/logs /app/tmp /app/data

# Set permissions
RUN chmod +x bin/task-master.js
RUN chmod +x src/comprehensive_cicd/api_server.js

# Create non-root user
RUN addgroup -g 1001 -S cicd && \
    adduser -S cicd -u 1001 -G cicd

# Change ownership
RUN chown -R cicd:cicd /app

# Switch to non-root user
USER cicd

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/api/v1/health || exit 1

# Expose port
EXPOSE 8080

# Environment variables
ENV NODE_ENV=production
ENV PORT=8080
ENV HOST=0.0.0.0

# Start the comprehensive CI/CD API server
CMD ["node", "src/comprehensive_cicd/api_server.js"]

