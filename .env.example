# PostgreSQL Database Configuration with Cloudflare Integration
# Copy this file to .env and update the values for your environment

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# Basic database connection settings
DB_HOST=localhost
DB_PORT=5432
DB_NAME=codegen-taskmaster-db
DB_USER=software_developer
DB_PASSWORD=your_secure_password_here
DB_SSL_MODE=require

# Connection pool settings
DB_POOL_MIN=2
DB_POOL_MAX=10
DB_POOL_IDLE_TIMEOUT=10000
DB_POOL_ACQUIRE_TIMEOUT=30000
DB_POOL_CREATE_TIMEOUT=30000
DB_POOL_DESTROY_TIMEOUT=5000
DB_POOL_REAP_INTERVAL=1000
DB_POOL_CREATE_RETRY_INTERVAL=200

# Query and connection timeouts
DB_QUERY_TIMEOUT=60000
DB_RETRY_MAX_ATTEMPTS=3
DB_RETRY_DELAY_MS=1000
DB_RETRY_BACKOFF_FACTOR=2
DB_RETRY_MAX_DELAY_MS=30000

# Health check configuration
DB_HEALTH_CHECK_ENABLED=true
DB_HEALTH_CHECK_INTERVAL=30000
DB_HEALTH_CHECK_TIMEOUT=5000
DB_HEALTH_CHECK_FAILURE_THRESHOLD=3
DB_HEALTH_CHECK_RECOVERY_THRESHOLD=2

# Migration settings
DB_MIGRATIONS_TABLE=schema_migrations
DB_MIGRATIONS_DIR=./src/ai_cicd_system/database/migrations
DB_MIGRATIONS_AUTO_RUN=false
DB_MIGRATIONS_LOCK_TIMEOUT=300000

# =============================================================================
# CLOUDFLARE CONFIGURATION
# =============================================================================

# Enable Cloudflare tunnel integration
USE_CLOUDFLARE_TUNNEL=false

# Cloudflare API credentials
CLOUDFLARE_API_TOKEN=your_cloudflare_api_token_here
CLOUDFLARE_EMAIL=your_email@example.com
CLOUDFLARE_API_KEY=your_global_api_key_here
CLOUDFLARE_ACCOUNT_ID=your_account_id_here
CLOUDFLARE_ZONE_ID=your_zone_id_here

# Tunnel configuration
CLOUDFLARE_TUNNEL_NAME=codegen-taskmaster-db-tunnel
CLOUDFLARE_TUNNEL_UUID=your_tunnel_uuid_here
CLOUDFLARE_TUNNEL_SECRET=your_tunnel_secret_here
CLOUDFLARE_TUNNEL_CREDENTIALS_FILE=./cloudflare/tunnel-credentials.json
CLOUDFLARE_TUNNEL_CONFIG_FILE=./infrastructure/cloudflare/tunnel_config.yaml

# Access domain and application settings
CLOUDFLARE_ACCESS_DOMAIN=db.codegen-taskmaster.com
CLOUDFLARE_ACCESS_APP_ID=your_access_app_id_here
CLOUDFLARE_ACCESS_POLICY_ID=your_policy_id_here

# Authentication settings
CLOUDFLARE_SESSION_DURATION=24h
CLOUDFLARE_REQUIRE_MFA=true

# IP restrictions
CLOUDFLARE_IP_RESTRICTIONS_ENABLED=false
CLOUDFLARE_ALLOWED_IPS=192.168.1.0/24,10.0.0.0/8
CLOUDFLARE_BLOCKED_COUNTRIES=CN,RU,KP

# SSL/TLS settings
CLOUDFLARE_SSL_MODE=strict
CLOUDFLARE_MIN_TLS_VERSION=1.2
CLOUDFLARE_HSTS_ENABLED=true
CLOUDFLARE_HSTS_MAX_AGE=31536000
CLOUDFLARE_HSTS_INCLUDE_SUBDOMAINS=true
CLOUDFLARE_HSTS_PRELOAD=false

# Certificate management
CLOUDFLARE_CERT_AUTO_RENEWAL=true
CLOUDFLARE_CERT_NOTIFICATION_EMAIL=admin@example.com
CLOUDFLARE_CERT_RENEWAL_THRESHOLD=30

# WAF (Web Application Firewall) settings
CLOUDFLARE_WAF_ENABLED=true
CLOUDFLARE_WAF_MODE=block
CLOUDFLARE_WAF_SENSITIVITY=medium

# DDoS protection
CLOUDFLARE_DDOS_ENABLED=true
CLOUDFLARE_DDOS_SENSITIVITY=medium
CLOUDFLARE_DDOS_THRESHOLD=1000

# Rate limiting
CLOUDFLARE_RATE_LIMITING_ENABLED=true
CLOUDFLARE_DB_RATE_LIMIT=100
CLOUDFLARE_DB_RATE_PERIOD=60
CLOUDFLARE_DB_RATE_TIMEOUT=300
CLOUDFLARE_API_RATE_LIMIT=1000
CLOUDFLARE_API_RATE_PERIOD=3600
CLOUDFLARE_API_RATE_TIMEOUT=600

# Monitoring and analytics
CLOUDFLARE_MONITORING_ENABLED=true
CLOUDFLARE_ANALYTICS_ENABLED=true
CLOUDFLARE_ANALYTICS_RETENTION=30

# Alerting
CLOUDFLARE_ALERTS_ENABLED=true
CLOUDFLARE_ALERTS_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/WEBHOOK/URL
CLOUDFLARE_ALERTS_EMAIL=alerts@example.com
CLOUDFLARE_ERROR_RATE_THRESHOLD=5.0
CLOUDFLARE_RESPONSE_TIME_THRESHOLD=5000
CLOUDFLARE_TRAFFIC_SPIKE_THRESHOLD=200.0

# Caching
CLOUDFLARE_CACHING_ENABLED=false
CLOUDFLARE_CACHE_TTL=300

# Load balancing
CLOUDFLARE_LOAD_BALANCING_ENABLED=false
CLOUDFLARE_LOAD_BALANCER_POOL_ID=your_pool_id_here
CLOUDFLARE_HEALTH_CHECK_INTERVAL=60
CLOUDFLARE_HEALTH_CHECK_TIMEOUT=10
CLOUDFLARE_HEALTH_CHECK_RETRIES=3

# Cloudflare tunnel daemon settings
CLOUDFLARE_LOG_LEVEL=info
CLOUDFLARE_LOG_FILE=/var/log/cloudflared/tunnel.log
CLOUDFLARE_METRICS_ADDRESS=0.0.0.0:8081
CLOUDFLARE_NO_AUTOUPDATE=false
CLOUDFLARE_AUTOUPDATE_FREQ=24h
CLOUDFLARE_GRACE_PERIOD=30s
CLOUDFLARE_RETRIES=5
CLOUDFLARE_PROTOCOL=auto
CLOUDFLARE_POST_QUANTUM=false

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Database security
DB_CONNECTION_ENCRYPTION=true
DB_QUERY_VALIDATION=true
DB_SQL_INJECTION_PROTECTION=true

# Rate limiting at database level
DB_RATE_LIMITING_ENABLED=false
DB_MAX_QUERIES_PER_MINUTE=1000
DB_MAX_CONNECTIONS_PER_IP=10

# SSL configuration for Cloudflare tunnel
CLOUDFLARE_DB_HOST=db.codegen-taskmaster.com
CLOUDFLARE_DB_PORT=5432
CLOUDFLARE_SSL_REJECT_UNAUTHORIZED=false
CLOUDFLARE_SSL_CA_CERT=./certs/ca.crt
CLOUDFLARE_SSL_CLIENT_CERT=./certs/client.crt
CLOUDFLARE_SSL_CLIENT_KEY=./certs/client.key

# Cloudflare tunnel pool settings (optimized for network latency)
CLOUDFLARE_DB_POOL_MIN=2
CLOUDFLARE_DB_POOL_MAX=20
CLOUDFLARE_DB_POOL_IDLE_TIMEOUT=30000
CLOUDFLARE_DB_POOL_ACQUIRE_TIMEOUT=60000
CLOUDFLARE_DB_POOL_CREATE_TIMEOUT=30000
CLOUDFLARE_DB_POOL_DESTROY_TIMEOUT=5000
CLOUDFLARE_DB_POOL_REAP_INTERVAL=1000
CLOUDFLARE_DB_POOL_CREATE_RETRY_INTERVAL=200

# Cloudflare tunnel query timeout (increased for network latency)
CLOUDFLARE_DB_QUERY_TIMEOUT=120000

# Cloudflare tunnel retry settings (enhanced for network resilience)
CLOUDFLARE_DB_RETRY_MAX_ATTEMPTS=5
CLOUDFLARE_DB_RETRY_DELAY_MS=2000
CLOUDFLARE_DB_RETRY_BACKOFF_FACTOR=2
CLOUDFLARE_DB_RETRY_MAX_DELAY_MS=30000

# =============================================================================
# MONITORING & PERFORMANCE
# =============================================================================

# Query monitoring
DB_SLOW_QUERY_THRESHOLD=1000
DB_LOG_QUERIES=false
DB_LOG_SLOW_QUERIES=true
DB_TRACK_QUERY_PLANS=false
DB_PERFORMANCE_INSIGHTS=false

# Enhanced logging
DB_ENHANCED_LOGGING=false

# Query caching
DB_QUERY_CACHING=false

# Connection pooling version
DB_CONNECTION_POOLING_V2=false

# Database maintenance
DB_AUTO_VACUUM=true

# Parallel queries
DB_PARALLEL_QUERIES=false

# =============================================================================
# AUDIT & COMPLIANCE
# =============================================================================

# Audit logging
DB_AUDIT_ENABLED=true
DB_AUDIT_RETENTION_DAYS=90

# =============================================================================
# BACKUP & RECOVERY
# =============================================================================

# Backup configuration
DB_BACKUP_ENABLED=true
DB_BACKUP_SCHEDULE=0 2 * * *
DB_BACKUP_RETENTION_DAYS=30
DB_BACKUP_COMPRESSION=true
DB_BACKUP_ENCRYPTION=false
DB_BACKUP_STORAGE_LOCATION=./backups

# S3 backup storage (optional)
DB_BACKUP_S3_BUCKET=your-backup-bucket
DB_BACKUP_S3_REGION=us-east-1
DB_BACKUP_S3_ACCESS_KEY=your_access_key
DB_BACKUP_S3_SECRET_KEY=your_secret_key

# Backup notifications
DB_BACKUP_NOTIFICATION_WEBHOOK=https://hooks.slack.com/services/YOUR/BACKUP/WEBHOOK

# =============================================================================
# READ REPLICAS (SCALING)
# =============================================================================

# Read replica configuration
DB_READ_REPLICAS_ENABLED=false
DB_READ_REPLICA_HOSTS=replica1.example.com,replica2.example.com
DB_READ_REPLICA_LOAD_BALANCING=round_robin
DB_READ_REPLICA_FALLBACK=true

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Environment
NODE_ENV=development

# Application settings
APP_PORT=3000
APP_HOST=localhost

# Logging
LOG_LEVEL=info
LOG_FILE=./logs/application.log

# =============================================================================
# DEVELOPMENT & TESTING
# =============================================================================

# Mock mode (for development/testing)
ENABLE_MOCK_STORAGE=false

# Debug settings
DEBUG=false
VERBOSE_LOGGING=false

# Test database (automatically appends _test to DB_NAME)
TEST_DB_NAME=codegen-taskmaster-db_test

# =============================================================================
# EXTERNAL INTEGRATIONS
# =============================================================================

# GitHub integration
GITHUB_TOKEN=your_github_token_here
GITHUB_WEBHOOK_SECRET=your_webhook_secret_here

# Linear integration
LINEAR_API_KEY=your_linear_api_key_here
LINEAR_WEBHOOK_SECRET=your_linear_webhook_secret_here

# Jira integration (optional)
JIRA_HOST=your-company.atlassian.net
JIRA_USERNAME=your_username
JIRA_API_TOKEN=your_jira_api_token

# Slack notifications (optional)
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK
SLACK_CHANNEL=#database-alerts

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Enable/disable specific features
FEATURE_ENHANCED_TASKS=true
FEATURE_TEMPLATE_MANAGEMENT=true
FEATURE_ADVANCED_ANALYTICS=false
FEATURE_REAL_TIME_SYNC=false
FEATURE_AI_INSIGHTS=false

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================

# PostgreSQL specific settings (for postgresql.conf)
# These should be set in your PostgreSQL configuration file

# Memory settings
# shared_buffers = 256MB
# effective_cache_size = 1GB
# work_mem = 4MB
# maintenance_work_mem = 64MB

# Connection settings
# max_connections = 100
# superuser_reserved_connections = 3

# Write-ahead logging
# wal_buffers = 16MB
# checkpoint_completion_target = 0.9
# wal_writer_delay = 200ms

# Query planner
# random_page_cost = 1.1
# effective_io_concurrency = 200

# Logging
# log_min_duration_statement = 1000
# log_checkpoints = on
# log_connections = on
# log_disconnections = on
# log_lock_waits = on

# =============================================================================
# NOTES
# =============================================================================

# 1. Replace all placeholder values (your_*_here) with actual values
# 2. For production, ensure all passwords and tokens are secure
# 3. Enable Cloudflare tunnel only if you need external database access
# 4. Adjust pool sizes based on your expected load
# 5. Enable monitoring and alerting for production environments
# 6. Regular backup testing is recommended
# 7. Review security settings before deploying to production

